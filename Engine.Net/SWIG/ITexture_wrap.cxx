/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGCSHARP
#define SWIGCSHARP
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_ITexture(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_ITexture(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_ITexture(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else


#include "..\..\LBase\linttype.hpp"
using namespace leo::inttype;
#include "..\..\Engine\Render\ITexture.hpp"
using namespace platform::Render::IFormat;


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT int SWIGSTDCALL CSharp_EnginefNet_LE_RENDER_ITexture_hpp_get___() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_delete_Texture___(void * jarg1) {
  platform::Render::Texture *arg1 = (platform::Render::Texture *) 0 ;
  
  arg1 = (platform::Render::Texture *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_EnginefNet_Texture_GetNumMipMaps___(void * jarg1) {
  unsigned char jresult ;
  platform::Render::Texture *arg1 = (platform::Render::Texture *) 0 ;
  uint8 result;
  
  arg1 = (platform::Render::Texture *)jarg1; 
  result = (uint8)((platform::Render::Texture const *)arg1)->GetNumMipMaps();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_EnginefNet_Texture_GetArraySize___(void * jarg1) {
  unsigned char jresult ;
  platform::Render::Texture *arg1 = (platform::Render::Texture *) 0 ;
  uint8 result;
  
  arg1 = (platform::Render::Texture *)jarg1; 
  result = (uint8)((platform::Render::Texture const *)arg1)->GetArraySize();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EnginefNet_Texture_GetFormat___(void * jarg1) {
  int jresult ;
  platform::Render::Texture *arg1 = (platform::Render::Texture *) 0 ;
  EFormat result;
  
  arg1 = (platform::Render::Texture *)jarg1; 
  result = (EFormat)((platform::Render::Texture const *)arg1)->GetFormat();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EnginefNet_Texture_GetTextureType___(void * jarg1) {
  int jresult ;
  platform::Render::Texture *arg1 = (platform::Render::Texture *) 0 ;
  platform::Render::Texture::Type result;
  
  arg1 = (platform::Render::Texture *)jarg1; 
  result = (platform::Render::Texture::Type)((platform::Render::Texture const *)arg1)->GetType();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EnginefNet_Texture_GetSampleInfo___(void * jarg1) {
  void * jresult ;
  platform::Render::Texture *arg1 = (platform::Render::Texture *) 0 ;
  SampleDesc result;
  
  arg1 = (platform::Render::Texture *)jarg1; 
  result = ((platform::Render::Texture const *)arg1)->GetSampleInfo();
  jresult = new SampleDesc((const SampleDesc &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EnginefNet_Texture_GetSampleCount___(void * jarg1) {
  unsigned int jresult ;
  platform::Render::Texture *arg1 = (platform::Render::Texture *) 0 ;
  uint32 result;
  
  arg1 = (platform::Render::Texture *)jarg1; 
  result = (uint32)((platform::Render::Texture const *)arg1)->GetSampleCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EnginefNet_Texture_GetSampleQuality___(void * jarg1) {
  unsigned int jresult ;
  platform::Render::Texture *arg1 = (platform::Render::Texture *) 0 ;
  uint32 result;
  
  arg1 = (platform::Render::Texture *)jarg1; 
  result = (uint32)((platform::Render::Texture const *)arg1)->GetSampleQuality();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EnginefNet_Texture_GetAccessMode___(void * jarg1) {
  unsigned int jresult ;
  platform::Render::Texture *arg1 = (platform::Render::Texture *) 0 ;
  uint32 result;
  
  arg1 = (platform::Render::Texture *)jarg1; 
  result = (uint32)((platform::Render::Texture const *)arg1)->GetAccessMode();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture_BuildMipSubLevels___(void * jarg1) {
  platform::Render::Texture *arg1 = (platform::Render::Texture *) 0 ;
  
  arg1 = (platform::Render::Texture *)jarg1; 
  (arg1)->BuildMipSubLevels();
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_delete_Texture1D___(void * jarg1) {
  platform::Render::Texture1D *arg1 = (platform::Render::Texture1D *) 0 ;
  
  arg1 = (platform::Render::Texture1D *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_Texture1D_GetWidth___(void * jarg1, unsigned char jarg2) {
  unsigned short jresult ;
  platform::Render::Texture1D *arg1 = (platform::Render::Texture1D *) 0 ;
  uint8 arg2 ;
  uint16 result;
  
  arg1 = (platform::Render::Texture1D *)jarg1; 
  arg2 = (uint8)jarg2; 
  result = (uint16)((platform::Render::Texture1D const *)arg1)->GetWidth(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture1D_Sub1D_array_index_set___(void * jarg1, unsigned char jarg2) {
  platform::Render::Texture1D::Sub1D *arg1 = (platform::Render::Texture1D::Sub1D *) 0 ;
  uint8 arg2 ;
  
  arg1 = (platform::Render::Texture1D::Sub1D *)jarg1; 
  arg2 = (uint8)jarg2; 
  if (arg1) (arg1)->array_index = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_EnginefNet_Texture1D_Sub1D_array_index_get___(void * jarg1) {
  unsigned char jresult ;
  platform::Render::Texture1D::Sub1D *arg1 = (platform::Render::Texture1D::Sub1D *) 0 ;
  uint8 result;
  
  arg1 = (platform::Render::Texture1D::Sub1D *)jarg1; 
  result = (uint8) ((arg1)->array_index);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture1D_Sub1D_level_set___(void * jarg1, unsigned char jarg2) {
  platform::Render::Texture1D::Sub1D *arg1 = (platform::Render::Texture1D::Sub1D *) 0 ;
  uint8 arg2 ;
  
  arg1 = (platform::Render::Texture1D::Sub1D *)jarg1; 
  arg2 = (uint8)jarg2; 
  if (arg1) (arg1)->level = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_EnginefNet_Texture1D_Sub1D_level_get___(void * jarg1) {
  unsigned char jresult ;
  platform::Render::Texture1D::Sub1D *arg1 = (platform::Render::Texture1D::Sub1D *) 0 ;
  uint8 result;
  
  arg1 = (platform::Render::Texture1D::Sub1D *)jarg1; 
  result = (uint8) ((arg1)->level);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EnginefNet_new_Texture1D_Sub1D__SWIG_0___(unsigned char jarg1, unsigned char jarg2) {
  void * jresult ;
  uint8 arg1 ;
  uint8 arg2 ;
  platform::Render::Texture1D::Sub1D *result = 0 ;
  
  arg1 = (uint8)jarg1; 
  arg2 = (uint8)jarg2; 
  result = (platform::Render::Texture1D::Sub1D *)new platform::Render::Texture1D::Sub1D(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EnginefNet_new_Texture1D_Sub1D__SWIG_1___() {
  void * jresult ;
  platform::Render::Texture1D::Sub1D *result = 0 ;
  
  result = (platform::Render::Texture1D::Sub1D *)new platform::Render::Texture1D::Sub1D();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_delete_Texture1D_Sub1D___(void * jarg1) {
  platform::Render::Texture1D::Sub1D *arg1 = (platform::Render::Texture1D::Sub1D *) 0 ;
  
  arg1 = (platform::Render::Texture1D::Sub1D *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture1D_Box1D_x_offset_set___(void * jarg1, unsigned short jarg2) {
  platform::Render::Texture1D::Box1D *arg1 = (platform::Render::Texture1D::Box1D *) 0 ;
  uint16 arg2 ;
  
  arg1 = (platform::Render::Texture1D::Box1D *)jarg1; 
  arg2 = (uint16)jarg2; 
  if (arg1) (arg1)->x_offset = arg2;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_Texture1D_Box1D_x_offset_get___(void * jarg1) {
  unsigned short jresult ;
  platform::Render::Texture1D::Box1D *arg1 = (platform::Render::Texture1D::Box1D *) 0 ;
  uint16 result;
  
  arg1 = (platform::Render::Texture1D::Box1D *)jarg1; 
  result = (uint16) ((arg1)->x_offset);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture1D_Box1D_width_set___(void * jarg1, unsigned short jarg2) {
  platform::Render::Texture1D::Box1D *arg1 = (platform::Render::Texture1D::Box1D *) 0 ;
  uint16 arg2 ;
  
  arg1 = (platform::Render::Texture1D::Box1D *)jarg1; 
  arg2 = (uint16)jarg2; 
  if (arg1) (arg1)->width = arg2;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_Texture1D_Box1D_width_get___(void * jarg1) {
  unsigned short jresult ;
  platform::Render::Texture1D::Box1D *arg1 = (platform::Render::Texture1D::Box1D *) 0 ;
  uint16 result;
  
  arg1 = (platform::Render::Texture1D::Box1D *)jarg1; 
  result = (uint16) ((arg1)->width);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EnginefNet_new_Texture1D_Box1D__SWIG_0___(void * jarg1, unsigned short jarg2, unsigned short jarg3) {
  void * jresult ;
  platform::Render::Texture1D::Sub1D *arg1 = 0 ;
  uint16 arg2 ;
  uint16 arg3 ;
  platform::Render::Texture1D::Box1D *result = 0 ;
  
  arg1 = (platform::Render::Texture1D::Sub1D *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture1D::Sub1D const & type is null", 0);
    return 0;
  } 
  arg2 = (uint16)jarg2; 
  arg3 = (uint16)jarg3; 
  result = (platform::Render::Texture1D::Box1D *)new platform::Render::Texture1D::Box1D((platform::Render::Texture1D::Sub1D const &)*arg1,arg2,arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EnginefNet_new_Texture1D_Box1D__SWIG_1___(unsigned char jarg1, unsigned char jarg2, unsigned short jarg3, unsigned short jarg4) {
  void * jresult ;
  uint8 arg1 ;
  uint8 arg2 ;
  uint16 arg3 ;
  uint16 arg4 ;
  platform::Render::Texture1D::Box1D *result = 0 ;
  
  arg1 = (uint8)jarg1; 
  arg2 = (uint8)jarg2; 
  arg3 = (uint16)jarg3; 
  arg4 = (uint16)jarg4; 
  result = (platform::Render::Texture1D::Box1D *)new platform::Render::Texture1D::Box1D(arg1,arg2,arg3,arg4);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EnginefNet_new_Texture1D_Box1D__SWIG_2___(unsigned short jarg1) {
  void * jresult ;
  uint16 arg1 ;
  platform::Render::Texture1D::Box1D *result = 0 ;
  
  arg1 = (uint16)jarg1; 
  result = (platform::Render::Texture1D::Box1D *)new platform::Render::Texture1D::Box1D(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_delete_Texture1D_Box1D___(void * jarg1) {
  platform::Render::Texture1D::Box1D *arg1 = (platform::Render::Texture1D::Box1D *) 0 ;
  
  arg1 = (platform::Render::Texture1D::Box1D *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture1D_Map___(void * jarg1, int jarg2, void * jarg3, void * jarg4) {
  platform::Render::Texture1D *arg1 = (platform::Render::Texture1D *) 0 ;
  platform::Render::TextureMapAccess arg2 ;
  void **arg3 = 0 ;
  platform::Render::Texture1D::Box1D *arg4 = 0 ;
  
  arg1 = (platform::Render::Texture1D *)jarg1; 
  arg2 = (platform::Render::TextureMapAccess)jarg2; 
  arg3 = (void **)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "void *& type is null", 0);
    return ;
  } 
  arg4 = (platform::Render::Texture1D::Box1D *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture1D::Box1D const & type is null", 0);
    return ;
  } 
  (arg1)->Map(arg2,*arg3,(platform::Render::Texture1D::Box1D const &)*arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture1D_UnMap___(void * jarg1, void * jarg2) {
  platform::Render::Texture1D *arg1 = (platform::Render::Texture1D *) 0 ;
  platform::Render::Texture1D::Sub1D *arg2 = 0 ;
  
  arg1 = (platform::Render::Texture1D *)jarg1; 
  arg2 = (platform::Render::Texture1D::Sub1D *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture1D::Sub1D const & type is null", 0);
    return ;
  } 
  (arg1)->UnMap((platform::Render::Texture1D::Sub1D const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture1D_CopyToTexture___(void * jarg1, void * jarg2) {
  platform::Render::Texture1D *arg1 = (platform::Render::Texture1D *) 0 ;
  platform::Render::Texture1D *arg2 = 0 ;
  
  arg1 = (platform::Render::Texture1D *)jarg1; 
  arg2 = (platform::Render::Texture1D *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture1D & type is null", 0);
    return ;
  } 
  (arg1)->CopyToTexture(*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture1D_CopyToSubTexture___(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  platform::Render::Texture1D *arg1 = (platform::Render::Texture1D *) 0 ;
  platform::Render::Texture1D *arg2 = 0 ;
  platform::Render::Texture1D::Box1D *arg3 = 0 ;
  platform::Render::Texture1D::Box1D *arg4 = 0 ;
  
  arg1 = (platform::Render::Texture1D *)jarg1; 
  arg2 = (platform::Render::Texture1D *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture1D & type is null", 0);
    return ;
  } 
  arg3 = (platform::Render::Texture1D::Box1D *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture1D::Box1D const & type is null", 0);
    return ;
  } 
  arg4 = (platform::Render::Texture1D::Box1D *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture1D::Box1D const & type is null", 0);
    return ;
  } 
  (arg1)->CopyToSubTexture(*arg2,(platform::Render::Texture1D::Box1D const &)*arg3,(platform::Render::Texture1D::Box1D const &)*arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_delete_Texture2D___(void * jarg1) {
  platform::Render::Texture2D *arg1 = (platform::Render::Texture2D *) 0 ;
  
  arg1 = (platform::Render::Texture2D *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_Texture2D_GetWidth___(void * jarg1, unsigned char jarg2) {
  unsigned short jresult ;
  platform::Render::Texture2D *arg1 = (platform::Render::Texture2D *) 0 ;
  uint8 arg2 ;
  uint16 result;
  
  arg1 = (platform::Render::Texture2D *)jarg1; 
  arg2 = (uint8)jarg2; 
  result = (uint16)((platform::Render::Texture2D const *)arg1)->GetWidth(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_Texture2D_GetHeight___(void * jarg1, unsigned char jarg2) {
  unsigned short jresult ;
  platform::Render::Texture2D *arg1 = (platform::Render::Texture2D *) 0 ;
  uint8 arg2 ;
  uint16 result;
  
  arg1 = (platform::Render::Texture2D *)jarg1; 
  arg2 = (uint8)jarg2; 
  result = (uint16)((platform::Render::Texture2D const *)arg1)->GetHeight(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture2D_Box2D_y_offset_set___(void * jarg1, unsigned short jarg2) {
  platform::Render::Texture2D::Box2D *arg1 = (platform::Render::Texture2D::Box2D *) 0 ;
  uint16 arg2 ;
  
  arg1 = (platform::Render::Texture2D::Box2D *)jarg1; 
  arg2 = (uint16)jarg2; 
  if (arg1) (arg1)->y_offset = arg2;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_Texture2D_Box2D_y_offset_get___(void * jarg1) {
  unsigned short jresult ;
  platform::Render::Texture2D::Box2D *arg1 = (platform::Render::Texture2D::Box2D *) 0 ;
  uint16 result;
  
  arg1 = (platform::Render::Texture2D::Box2D *)jarg1; 
  result = (uint16) ((arg1)->y_offset);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture2D_Box2D_height_set___(void * jarg1, unsigned short jarg2) {
  platform::Render::Texture2D::Box2D *arg1 = (platform::Render::Texture2D::Box2D *) 0 ;
  uint16 arg2 ;
  
  arg1 = (platform::Render::Texture2D::Box2D *)jarg1; 
  arg2 = (uint16)jarg2; 
  if (arg1) (arg1)->height = arg2;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_Texture2D_Box2D_height_get___(void * jarg1) {
  unsigned short jresult ;
  platform::Render::Texture2D::Box2D *arg1 = (platform::Render::Texture2D::Box2D *) 0 ;
  uint16 result;
  
  arg1 = (platform::Render::Texture2D::Box2D *)jarg1; 
  result = (uint16) ((arg1)->height);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EnginefNet_new_Texture2D_Box2D__SWIG_0___(void * jarg1, unsigned short jarg2, unsigned short jarg3) {
  void * jresult ;
  platform::Render::Texture2D::Box2D::base *arg1 = 0 ;
  uint16 arg2 ;
  uint16 arg3 ;
  platform::Render::Texture2D::Box2D *result = 0 ;
  
  arg1 = (platform::Render::Texture2D::Box2D::base *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture2D::Box2D::base const & type is null", 0);
    return 0;
  } 
  arg2 = (uint16)jarg2; 
  arg3 = (uint16)jarg3; 
  result = (platform::Render::Texture2D::Box2D *)new platform::Render::Texture2D::Box2D((platform::Render::Texture2D::Box2D::base const &)*arg1,arg2,arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EnginefNet_new_Texture2D_Box2D__SWIG_1___(unsigned short jarg1, unsigned short jarg2) {
  void * jresult ;
  uint16 arg1 ;
  uint16 arg2 ;
  platform::Render::Texture2D::Box2D *result = 0 ;
  
  arg1 = (uint16)jarg1; 
  arg2 = (uint16)jarg2; 
  result = (platform::Render::Texture2D::Box2D *)new platform::Render::Texture2D::Box2D(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EnginefNet_new_Texture2D_Box2D__SWIG_2___(unsigned char jarg1, unsigned char jarg2, unsigned short jarg3, unsigned short jarg4, unsigned short jarg5, unsigned short jarg6) {
  void * jresult ;
  uint8 arg1 ;
  uint8 arg2 ;
  uint16 arg3 ;
  uint16 arg4 ;
  uint16 arg5 ;
  uint16 arg6 ;
  platform::Render::Texture2D::Box2D *result = 0 ;
  
  arg1 = (uint8)jarg1; 
  arg2 = (uint8)jarg2; 
  arg3 = (uint16)jarg3; 
  arg4 = (uint16)jarg4; 
  arg5 = (uint16)jarg5; 
  arg6 = (uint16)jarg6; 
  result = (platform::Render::Texture2D::Box2D *)new platform::Render::Texture2D::Box2D(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_delete_Texture2D_Box2D___(void * jarg1) {
  platform::Render::Texture2D::Box2D *arg1 = (platform::Render::Texture2D::Box2D *) 0 ;
  
  arg1 = (platform::Render::Texture2D::Box2D *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture2D_Map___(void * jarg1, int jarg2, void * jarg3, void * jarg4, void * jarg5) {
  platform::Render::Texture2D *arg1 = (platform::Render::Texture2D *) 0 ;
  platform::Render::TextureMapAccess arg2 ;
  void **arg3 = 0 ;
  uint32 *arg4 = 0 ;
  platform::Render::Texture2D::Box2D *arg5 = 0 ;
  
  arg1 = (platform::Render::Texture2D *)jarg1; 
  arg2 = (platform::Render::TextureMapAccess)jarg2; 
  arg3 = (void **)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "void *& type is null", 0);
    return ;
  } 
  arg4 = (uint32 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "uint32 & type is null", 0);
    return ;
  } 
  arg5 = (platform::Render::Texture2D::Box2D *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture2D::Box2D const & type is null", 0);
    return ;
  } 
  (arg1)->Map(arg2,*arg3,*arg4,(platform::Render::Texture2D::Box2D const &)*arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture2D_UnMap___(void * jarg1, void * jarg2) {
  platform::Render::Texture2D *arg1 = (platform::Render::Texture2D *) 0 ;
  platform::Render::Texture2D::Sub1D *arg2 = 0 ;
  
  arg1 = (platform::Render::Texture2D *)jarg1; 
  arg2 = (platform::Render::Texture2D::Sub1D *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture2D::Sub1D const & type is null", 0);
    return ;
  } 
  (arg1)->UnMap((platform::Render::Texture2D::Sub1D const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture2D_CopyToTexture___(void * jarg1, void * jarg2) {
  platform::Render::Texture2D *arg1 = (platform::Render::Texture2D *) 0 ;
  platform::Render::Texture2D *arg2 = 0 ;
  
  arg1 = (platform::Render::Texture2D *)jarg1; 
  arg2 = (platform::Render::Texture2D *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture2D & type is null", 0);
    return ;
  } 
  (arg1)->CopyToTexture(*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture2D_CopyToSubTexture___(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  platform::Render::Texture2D *arg1 = (platform::Render::Texture2D *) 0 ;
  platform::Render::Texture2D *arg2 = 0 ;
  platform::Render::Texture2D::Box2D *arg3 = 0 ;
  platform::Render::Texture2D::Box2D *arg4 = 0 ;
  
  arg1 = (platform::Render::Texture2D *)jarg1; 
  arg2 = (platform::Render::Texture2D *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture2D & type is null", 0);
    return ;
  } 
  arg3 = (platform::Render::Texture2D::Box2D *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture2D::Box2D const & type is null", 0);
    return ;
  } 
  arg4 = (platform::Render::Texture2D::Box2D *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture2D::Box2D const & type is null", 0);
    return ;
  } 
  (arg1)->CopyToSubTexture(*arg2,(platform::Render::Texture2D::Box2D const &)*arg3,(platform::Render::Texture2D::Box2D const &)*arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_delete_Texture3D___(void * jarg1) {
  platform::Render::Texture3D *arg1 = (platform::Render::Texture3D *) 0 ;
  
  arg1 = (platform::Render::Texture3D *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_Texture3D_GetWidth___(void * jarg1, unsigned char jarg2) {
  unsigned short jresult ;
  platform::Render::Texture3D *arg1 = (platform::Render::Texture3D *) 0 ;
  uint8 arg2 ;
  uint16 result;
  
  arg1 = (platform::Render::Texture3D *)jarg1; 
  arg2 = (uint8)jarg2; 
  result = (uint16)((platform::Render::Texture3D const *)arg1)->GetWidth(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_Texture3D_GetHeight___(void * jarg1, unsigned char jarg2) {
  unsigned short jresult ;
  platform::Render::Texture3D *arg1 = (platform::Render::Texture3D *) 0 ;
  uint8 arg2 ;
  uint16 result;
  
  arg1 = (platform::Render::Texture3D *)jarg1; 
  arg2 = (uint8)jarg2; 
  result = (uint16)((platform::Render::Texture3D const *)arg1)->GetHeight(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_Texture3D_GetDepth___(void * jarg1, unsigned char jarg2) {
  unsigned short jresult ;
  platform::Render::Texture3D *arg1 = (platform::Render::Texture3D *) 0 ;
  uint8 arg2 ;
  uint16 result;
  
  arg1 = (platform::Render::Texture3D *)jarg1; 
  arg2 = (uint8)jarg2; 
  result = (uint16)((platform::Render::Texture3D const *)arg1)->GetDepth(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture3D_Box3D_z_offset_set___(void * jarg1, unsigned short jarg2) {
  platform::Render::Texture3D::Box3D *arg1 = (platform::Render::Texture3D::Box3D *) 0 ;
  uint16 arg2 ;
  
  arg1 = (platform::Render::Texture3D::Box3D *)jarg1; 
  arg2 = (uint16)jarg2; 
  if (arg1) (arg1)->z_offset = arg2;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_Texture3D_Box3D_z_offset_get___(void * jarg1) {
  unsigned short jresult ;
  platform::Render::Texture3D::Box3D *arg1 = (platform::Render::Texture3D::Box3D *) 0 ;
  uint16 result;
  
  arg1 = (platform::Render::Texture3D::Box3D *)jarg1; 
  result = (uint16) ((arg1)->z_offset);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture3D_Box3D_depth_set___(void * jarg1, unsigned short jarg2) {
  platform::Render::Texture3D::Box3D *arg1 = (platform::Render::Texture3D::Box3D *) 0 ;
  uint16 arg2 ;
  
  arg1 = (platform::Render::Texture3D::Box3D *)jarg1; 
  arg2 = (uint16)jarg2; 
  if (arg1) (arg1)->depth = arg2;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_Texture3D_Box3D_depth_get___(void * jarg1) {
  unsigned short jresult ;
  platform::Render::Texture3D::Box3D *arg1 = (platform::Render::Texture3D::Box3D *) 0 ;
  uint16 result;
  
  arg1 = (platform::Render::Texture3D::Box3D *)jarg1; 
  result = (uint16) ((arg1)->depth);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EnginefNet_new_Texture3D_Box3D__SWIG_0___(void * jarg1, unsigned short jarg2, unsigned short jarg3) {
  void * jresult ;
  platform::Render::Texture3D::Box3D::base *arg1 = 0 ;
  uint16 arg2 ;
  uint16 arg3 ;
  platform::Render::Texture3D::Box3D *result = 0 ;
  
  arg1 = (platform::Render::Texture3D::Box3D::base *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture3D::Box3D::base const & type is null", 0);
    return 0;
  } 
  arg2 = (uint16)jarg2; 
  arg3 = (uint16)jarg3; 
  result = (platform::Render::Texture3D::Box3D *)new platform::Render::Texture3D::Box3D((platform::Render::Texture3D::Box3D::base const &)*arg1,arg2,arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EnginefNet_new_Texture3D_Box3D__SWIG_1___(unsigned char jarg1, unsigned char jarg2, unsigned short jarg3, unsigned short jarg4, unsigned short jarg5, unsigned short jarg6, unsigned short jarg7, unsigned short jarg8) {
  void * jresult ;
  uint8 arg1 ;
  uint8 arg2 ;
  uint16 arg3 ;
  uint16 arg4 ;
  uint16 arg5 ;
  uint16 arg6 ;
  uint16 arg7 ;
  uint16 arg8 ;
  platform::Render::Texture3D::Box3D *result = 0 ;
  
  arg1 = (uint8)jarg1; 
  arg2 = (uint8)jarg2; 
  arg3 = (uint16)jarg3; 
  arg4 = (uint16)jarg4; 
  arg5 = (uint16)jarg5; 
  arg6 = (uint16)jarg6; 
  arg7 = (uint16)jarg7; 
  arg8 = (uint16)jarg8; 
  result = (platform::Render::Texture3D::Box3D *)new platform::Render::Texture3D::Box3D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_delete_Texture3D_Box3D___(void * jarg1) {
  platform::Render::Texture3D::Box3D *arg1 = (platform::Render::Texture3D::Box3D *) 0 ;
  
  arg1 = (platform::Render::Texture3D::Box3D *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture3D_Map___(void * jarg1, int jarg2, void * jarg3, void * jarg4, void * jarg5, void * jarg6) {
  platform::Render::Texture3D *arg1 = (platform::Render::Texture3D *) 0 ;
  platform::Render::TextureMapAccess arg2 ;
  void **arg3 = 0 ;
  uint32 *arg4 = 0 ;
  uint32 *arg5 = 0 ;
  platform::Render::Texture3D::Box3D *arg6 = 0 ;
  
  arg1 = (platform::Render::Texture3D *)jarg1; 
  arg2 = (platform::Render::TextureMapAccess)jarg2; 
  arg3 = (void **)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "void *& type is null", 0);
    return ;
  } 
  arg4 = (uint32 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "uint32 & type is null", 0);
    return ;
  } 
  arg5 = (uint32 *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "uint32 & type is null", 0);
    return ;
  } 
  arg6 = (platform::Render::Texture3D::Box3D *)jarg6;
  if (!arg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture3D::Box3D const & type is null", 0);
    return ;
  } 
  (arg1)->Map(arg2,*arg3,*arg4,*arg5,(platform::Render::Texture3D::Box3D const &)*arg6);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture3D_UnMap___(void * jarg1, void * jarg2) {
  platform::Render::Texture3D *arg1 = (platform::Render::Texture3D *) 0 ;
  platform::Render::Texture3D::Sub1D *arg2 = 0 ;
  
  arg1 = (platform::Render::Texture3D *)jarg1; 
  arg2 = (platform::Render::Texture3D::Sub1D *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture3D::Sub1D const & type is null", 0);
    return ;
  } 
  (arg1)->UnMap((platform::Render::Texture3D::Sub1D const &)*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture3D_CopyToTexture___(void * jarg1, void * jarg2) {
  platform::Render::Texture3D *arg1 = (platform::Render::Texture3D *) 0 ;
  platform::Render::Texture3D *arg2 = 0 ;
  
  arg1 = (platform::Render::Texture3D *)jarg1; 
  arg2 = (platform::Render::Texture3D *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture3D & type is null", 0);
    return ;
  } 
  (arg1)->CopyToTexture(*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_Texture3D_CopyToSubTexture___(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  platform::Render::Texture3D *arg1 = (platform::Render::Texture3D *) 0 ;
  platform::Render::Texture3D *arg2 = 0 ;
  platform::Render::Texture3D::Box3D *arg3 = 0 ;
  platform::Render::Texture3D::Box3D *arg4 = 0 ;
  
  arg1 = (platform::Render::Texture3D *)jarg1; 
  arg2 = (platform::Render::Texture3D *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture3D & type is null", 0);
    return ;
  } 
  arg3 = (platform::Render::Texture3D::Box3D *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture3D::Box3D const & type is null", 0);
    return ;
  } 
  arg4 = (platform::Render::Texture3D::Box3D *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::Texture3D::Box3D const & type is null", 0);
    return ;
  } 
  (arg1)->CopyToSubTexture(*arg2,(platform::Render::Texture3D::Box3D const &)*arg3,(platform::Render::Texture3D::Box3D const &)*arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_delete_TextureCube___(void * jarg1) {
  platform::Render::TextureCube *arg1 = (platform::Render::TextureCube *) 0 ;
  
  arg1 = (platform::Render::TextureCube *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_TextureCube_GetWidth___(void * jarg1, unsigned char jarg2) {
  unsigned short jresult ;
  platform::Render::TextureCube *arg1 = (platform::Render::TextureCube *) 0 ;
  uint8 arg2 ;
  uint16 result;
  
  arg1 = (platform::Render::TextureCube *)jarg1; 
  arg2 = (uint8)jarg2; 
  result = (uint16)((platform::Render::TextureCube const *)arg1)->GetWidth(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_EnginefNet_TextureCube_GetHeight___(void * jarg1, unsigned char jarg2) {
  unsigned short jresult ;
  platform::Render::TextureCube *arg1 = (platform::Render::TextureCube *) 0 ;
  uint8 arg2 ;
  uint16 result;
  
  arg1 = (platform::Render::TextureCube *)jarg1; 
  arg2 = (uint8)jarg2; 
  result = (uint16)((platform::Render::TextureCube const *)arg1)->GetHeight(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_TextureCube_BoxCube_face_set___(void * jarg1, int jarg2) {
  platform::Render::TextureCube::BoxCube *arg1 = (platform::Render::TextureCube::BoxCube *) 0 ;
  platform::Render::Texture::CubeFaces arg2 ;
  
  arg1 = (platform::Render::TextureCube::BoxCube *)jarg1; 
  arg2 = (platform::Render::Texture::CubeFaces)jarg2; 
  if (arg1) (arg1)->face = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EnginefNet_TextureCube_BoxCube_face_get___(void * jarg1) {
  int jresult ;
  platform::Render::TextureCube::BoxCube *arg1 = (platform::Render::TextureCube::BoxCube *) 0 ;
  platform::Render::Texture::CubeFaces result;
  
  arg1 = (platform::Render::TextureCube::BoxCube *)jarg1; 
  result = (platform::Render::Texture::CubeFaces) ((arg1)->face);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EnginefNet_new_TextureCube_BoxCube___(void * jarg1, int jarg2) {
  void * jresult ;
  platform::Render::TextureCube::BoxCube::base *arg1 = 0 ;
  platform::Render::Texture::CubeFaces arg2 ;
  platform::Render::TextureCube::BoxCube *result = 0 ;
  
  arg1 = (platform::Render::TextureCube::BoxCube::base *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::TextureCube::BoxCube::base const & type is null", 0);
    return 0;
  } 
  arg2 = (platform::Render::Texture::CubeFaces)jarg2; 
  result = (platform::Render::TextureCube::BoxCube *)new platform::Render::TextureCube::BoxCube((platform::Render::TextureCube::BoxCube::base const &)*arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_delete_TextureCube_BoxCube___(void * jarg1) {
  platform::Render::TextureCube::BoxCube *arg1 = (platform::Render::TextureCube::BoxCube *) 0 ;
  
  arg1 = (platform::Render::TextureCube::BoxCube *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_TextureCube_Map___(void * jarg1, int jarg2, void * jarg3, void * jarg4, void * jarg5) {
  platform::Render::TextureCube *arg1 = (platform::Render::TextureCube *) 0 ;
  platform::Render::TextureMapAccess arg2 ;
  void **arg3 = 0 ;
  uint32 *arg4 = 0 ;
  platform::Render::TextureCube::BoxCube *arg5 = 0 ;
  
  arg1 = (platform::Render::TextureCube *)jarg1; 
  arg2 = (platform::Render::TextureMapAccess)jarg2; 
  arg3 = (void **)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "void *& type is null", 0);
    return ;
  } 
  arg4 = (uint32 *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "uint32 & type is null", 0);
    return ;
  } 
  arg5 = (platform::Render::TextureCube::BoxCube *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::TextureCube::BoxCube const & type is null", 0);
    return ;
  } 
  (arg1)->Map(arg2,*arg3,*arg4,(platform::Render::TextureCube::BoxCube const &)*arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_TextureCube_UnMap___(void * jarg1, void * jarg2, int jarg3) {
  platform::Render::TextureCube *arg1 = (platform::Render::TextureCube *) 0 ;
  platform::Render::TextureCube::Sub1D *arg2 = 0 ;
  platform::Render::Texture::CubeFaces arg3 ;
  
  arg1 = (platform::Render::TextureCube *)jarg1; 
  arg2 = (platform::Render::TextureCube::Sub1D *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::TextureCube::Sub1D const & type is null", 0);
    return ;
  } 
  arg3 = (platform::Render::Texture::CubeFaces)jarg3; 
  (arg1)->UnMap((platform::Render::TextureCube::Sub1D const &)*arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_TextureCube_CopyToTexture___(void * jarg1, void * jarg2) {
  platform::Render::TextureCube *arg1 = (platform::Render::TextureCube *) 0 ;
  platform::Render::TextureCube *arg2 = 0 ;
  
  arg1 = (platform::Render::TextureCube *)jarg1; 
  arg2 = (platform::Render::TextureCube *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::TextureCube & type is null", 0);
    return ;
  } 
  (arg1)->CopyToTexture(*arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EnginefNet_TextureCube_CopyToSubTexture___(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  platform::Render::TextureCube *arg1 = (platform::Render::TextureCube *) 0 ;
  platform::Render::TextureCube *arg2 = 0 ;
  platform::Render::TextureCube::BoxCube *arg3 = 0 ;
  platform::Render::TextureCube::BoxCube *arg4 = 0 ;
  
  arg1 = (platform::Render::TextureCube *)jarg1; 
  arg2 = (platform::Render::TextureCube *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::TextureCube & type is null", 0);
    return ;
  } 
  arg3 = (platform::Render::TextureCube::BoxCube *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::TextureCube::BoxCube const & type is null", 0);
    return ;
  } 
  arg4 = (platform::Render::TextureCube::BoxCube *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "platform::Render::TextureCube::BoxCube const & type is null", 0);
    return ;
  } 
  (arg1)->CopyToSubTexture(*arg2,(platform::Render::TextureCube::BoxCube const &)*arg3,(platform::Render::TextureCube::BoxCube const &)*arg4);
}


SWIGEXPORT platform::Render::Texture1D::Sub1D * SWIGSTDCALL CSharp_EnginefNet_Texture1D_Box1D_SWIGUpcast___(platform::Render::Texture1D::Box1D *jarg1) {
    return (platform::Render::Texture1D::Sub1D *)jarg1;
}

SWIGEXPORT platform::Render::Texture * SWIGSTDCALL CSharp_EnginefNet_Texture1D_SWIGUpcast___(platform::Render::Texture1D *jarg1) {
    return (platform::Render::Texture *)jarg1;
}

SWIGEXPORT platform::Render::Texture1D::Box1D * SWIGSTDCALL CSharp_EnginefNet_Texture2D_Box2D_SWIGUpcast___(platform::Render::Texture2D::Box2D *jarg1) {
    return (platform::Render::Texture1D::Box1D *)jarg1;
}

SWIGEXPORT platform::Render::Texture * SWIGSTDCALL CSharp_EnginefNet_Texture2D_SWIGUpcast___(platform::Render::Texture2D *jarg1) {
    return (platform::Render::Texture *)jarg1;
}

SWIGEXPORT platform::Render::Texture2D::Box2D * SWIGSTDCALL CSharp_EnginefNet_Texture3D_Box3D_SWIGUpcast___(platform::Render::Texture3D::Box3D *jarg1) {
    return (platform::Render::Texture2D::Box2D *)jarg1;
}

SWIGEXPORT platform::Render::Texture * SWIGSTDCALL CSharp_EnginefNet_Texture3D_SWIGUpcast___(platform::Render::Texture3D *jarg1) {
    return (platform::Render::Texture *)jarg1;
}

SWIGEXPORT platform::Render::Texture2D::Box2D * SWIGSTDCALL CSharp_EnginefNet_TextureCube_BoxCube_SWIGUpcast___(platform::Render::TextureCube::BoxCube *jarg1) {
    return (platform::Render::Texture2D::Box2D *)jarg1;
}

SWIGEXPORT platform::Render::Texture * SWIGSTDCALL CSharp_EnginefNet_TextureCube_SWIGUpcast___(platform::Render::TextureCube *jarg1) {
    return (platform::Render::Texture *)jarg1;
}

#ifdef __cplusplus
}
#endif

