//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Engine.Net {

class ITexturePINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="SWIGRegisterExceptionCallbacks_ITexture")]
    public static extern void SWIGRegisterExceptionCallbacks_ITexture(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_ITexture")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_ITexture(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_ITexture(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_ITexture(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(ITexturePINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(ITexturePINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="SWIGRegisterStringCallback_ITexture")]
    public static extern void SWIGRegisterStringCallback_ITexture(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_ITexture(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static ITexturePINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_LE_RENDER_ITexture_hpp_get___")]
  public static extern int LE_RENDER_ITexture_hpp_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_delete_Texture___")]
  public static extern void delete_Texture(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture_GetNumMipMaps___")]
  public static extern byte Texture_GetNumMipMaps(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture_GetArraySize___")]
  public static extern byte Texture_GetArraySize(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture_GetFormat___")]
  public static extern int Texture_GetFormat(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture_GetTextureType___")]
  public static extern int Texture_GetTextureType(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture_GetSampleInfo___")]
  public static extern global::System.IntPtr Texture_GetSampleInfo(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture_GetSampleCount___")]
  public static extern uint Texture_GetSampleCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture_GetSampleQuality___")]
  public static extern uint Texture_GetSampleQuality(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture_GetAccessMode___")]
  public static extern uint Texture_GetAccessMode(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture_BuildMipSubLevels___")]
  public static extern void Texture_BuildMipSubLevels(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_delete_Texture1D___")]
  public static extern void delete_Texture1D(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_GetWidth___")]
  public static extern ushort Texture1D_GetWidth(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_Sub1D_array_index_set___")]
  public static extern void Texture1D_Sub1D_array_index_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_Sub1D_array_index_get___")]
  public static extern byte Texture1D_Sub1D_array_index_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_Sub1D_level_set___")]
  public static extern void Texture1D_Sub1D_level_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_Sub1D_level_get___")]
  public static extern byte Texture1D_Sub1D_level_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_Texture1D_Sub1D__SWIG_0___")]
  public static extern global::System.IntPtr new_Texture1D_Sub1D__SWIG_0(byte jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_Texture1D_Sub1D__SWIG_1___")]
  public static extern global::System.IntPtr new_Texture1D_Sub1D__SWIG_1();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_delete_Texture1D_Sub1D___")]
  public static extern void delete_Texture1D_Sub1D(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_Box1D_x_offset_set___")]
  public static extern void Texture1D_Box1D_x_offset_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_Box1D_x_offset_get___")]
  public static extern ushort Texture1D_Box1D_x_offset_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_Box1D_width_set___")]
  public static extern void Texture1D_Box1D_width_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_Box1D_width_get___")]
  public static extern ushort Texture1D_Box1D_width_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_Texture1D_Box1D__SWIG_0___")]
  public static extern global::System.IntPtr new_Texture1D_Box1D__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2, ushort jarg3);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_Texture1D_Box1D__SWIG_1___")]
  public static extern global::System.IntPtr new_Texture1D_Box1D__SWIG_1(byte jarg1, byte jarg2, ushort jarg3, ushort jarg4);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_Texture1D_Box1D__SWIG_2___")]
  public static extern global::System.IntPtr new_Texture1D_Box1D__SWIG_2(ushort jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_delete_Texture1D_Box1D___")]
  public static extern void delete_Texture1D_Box1D(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_Map___")]
  public static extern void Texture1D_Map(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_UnMap___")]
  public static extern void Texture1D_UnMap(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_CopyToTexture___")]
  public static extern void Texture1D_CopyToTexture(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_CopyToSubTexture___")]
  public static extern void Texture1D_CopyToSubTexture(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_delete_Texture2D___")]
  public static extern void delete_Texture2D(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture2D_GetWidth___")]
  public static extern ushort Texture2D_GetWidth(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture2D_GetHeight___")]
  public static extern ushort Texture2D_GetHeight(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture2D_Box2D_y_offset_set___")]
  public static extern void Texture2D_Box2D_y_offset_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture2D_Box2D_y_offset_get___")]
  public static extern ushort Texture2D_Box2D_y_offset_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture2D_Box2D_height_set___")]
  public static extern void Texture2D_Box2D_height_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture2D_Box2D_height_get___")]
  public static extern ushort Texture2D_Box2D_height_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_Texture2D_Box2D__SWIG_0___")]
  public static extern global::System.IntPtr new_Texture2D_Box2D__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2, ushort jarg3);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_Texture2D_Box2D__SWIG_1___")]
  public static extern global::System.IntPtr new_Texture2D_Box2D__SWIG_1(ushort jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_Texture2D_Box2D__SWIG_2___")]
  public static extern global::System.IntPtr new_Texture2D_Box2D__SWIG_2(byte jarg1, byte jarg2, ushort jarg3, ushort jarg4, ushort jarg5, ushort jarg6);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_delete_Texture2D_Box2D___")]
  public static extern void delete_Texture2D_Box2D(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture2D_Map___")]
  public static extern void Texture2D_Map(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture2D_UnMap___")]
  public static extern void Texture2D_UnMap(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture2D_CopyToTexture___")]
  public static extern void Texture2D_CopyToTexture(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture2D_CopyToSubTexture___")]
  public static extern void Texture2D_CopyToSubTexture(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_delete_Texture3D___")]
  public static extern void delete_Texture3D(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture3D_GetWidth___")]
  public static extern ushort Texture3D_GetWidth(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture3D_GetHeight___")]
  public static extern ushort Texture3D_GetHeight(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture3D_GetDepth___")]
  public static extern ushort Texture3D_GetDepth(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture3D_Box3D_z_offset_set___")]
  public static extern void Texture3D_Box3D_z_offset_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture3D_Box3D_z_offset_get___")]
  public static extern ushort Texture3D_Box3D_z_offset_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture3D_Box3D_depth_set___")]
  public static extern void Texture3D_Box3D_depth_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture3D_Box3D_depth_get___")]
  public static extern ushort Texture3D_Box3D_depth_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_Texture3D_Box3D__SWIG_0___")]
  public static extern global::System.IntPtr new_Texture3D_Box3D__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2, ushort jarg3);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_Texture3D_Box3D__SWIG_1___")]
  public static extern global::System.IntPtr new_Texture3D_Box3D__SWIG_1(byte jarg1, byte jarg2, ushort jarg3, ushort jarg4, ushort jarg5, ushort jarg6, ushort jarg7, ushort jarg8);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_delete_Texture3D_Box3D___")]
  public static extern void delete_Texture3D_Box3D(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture3D_Map___")]
  public static extern void Texture3D_Map(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture3D_UnMap___")]
  public static extern void Texture3D_UnMap(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture3D_CopyToTexture___")]
  public static extern void Texture3D_CopyToTexture(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture3D_CopyToSubTexture___")]
  public static extern void Texture3D_CopyToSubTexture(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_delete_TextureCube___")]
  public static extern void delete_TextureCube(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_TextureCube_GetWidth___")]
  public static extern ushort TextureCube_GetWidth(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_TextureCube_GetHeight___")]
  public static extern ushort TextureCube_GetHeight(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_TextureCube_BoxCube_face_set___")]
  public static extern void TextureCube_BoxCube_face_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_TextureCube_BoxCube_face_get___")]
  public static extern int TextureCube_BoxCube_face_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_TextureCube_BoxCube___")]
  public static extern global::System.IntPtr new_TextureCube_BoxCube(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_delete_TextureCube_BoxCube___")]
  public static extern void delete_TextureCube_BoxCube(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_TextureCube_Map___")]
  public static extern void TextureCube_Map(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_TextureCube_UnMap___")]
  public static extern void TextureCube_UnMap(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_TextureCube_CopyToTexture___")]
  public static extern void TextureCube_CopyToTexture(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_TextureCube_CopyToSubTexture___")]
  public static extern void TextureCube_CopyToSubTexture(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_Box1D_SWIGUpcast___")]
  public static extern global::System.IntPtr Texture1D_Box1D_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture1D_SWIGUpcast___")]
  public static extern global::System.IntPtr Texture1D_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture2D_Box2D_SWIGUpcast___")]
  public static extern global::System.IntPtr Texture2D_Box2D_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture2D_SWIGUpcast___")]
  public static extern global::System.IntPtr Texture2D_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture3D_Box3D_SWIGUpcast___")]
  public static extern global::System.IntPtr Texture3D_Box3D_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_Texture3D_SWIGUpcast___")]
  public static extern global::System.IntPtr Texture3D_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_TextureCube_BoxCube_SWIGUpcast___")]
  public static extern global::System.IntPtr TextureCube_BoxCube_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_TextureCube_SWIGUpcast___")]
  public static extern global::System.IntPtr TextureCube_SWIGUpcast(global::System.IntPtr jarg1);
}

}
