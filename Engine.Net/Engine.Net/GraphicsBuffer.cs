//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Engine.Net {

public class GraphicsBuffer : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal GraphicsBuffer(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(GraphicsBuffer obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~GraphicsBuffer() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          IGraphicsBufferPINVOKE.delete_GraphicsBuffer(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public uint GetSize() {
    uint ret = IGraphicsBufferPINVOKE.GraphicsBuffer_GetSize(swigCPtr);
    return ret;
  }

  public BufferUsage GetUsage() {
    BufferUsage ret = (BufferUsage)IGraphicsBufferPINVOKE.GraphicsBuffer_GetUsage(swigCPtr);
    return ret;
  }

  public uint GetAccess() {
    uint ret = IGraphicsBufferPINVOKE.GraphicsBuffer_GetAccess(swigCPtr);
    return ret;
  }

  public virtual void CopyToBuffer(GraphicsBuffer rhs) {
    IGraphicsBufferPINVOKE.GraphicsBuffer_CopyToBuffer(swigCPtr, GraphicsBuffer.getCPtr(rhs));
    if (IGraphicsBufferPINVOKE.SWIGPendingException.Pending) throw IGraphicsBufferPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
