//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Engine.Net {

public class Caps : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Caps(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Caps obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Caps() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          DeviceCapsPINVOKE.delete_Caps(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public Caps.Type type {
    set {
      DeviceCapsPINVOKE.Caps_type_set(swigCPtr, (int)value);
    } 
    get {
      Caps.Type ret = (Caps.Type)DeviceCapsPINVOKE.Caps_type_get(swigCPtr);
      return ret;
    } 
  }

  public ushort max_texture_depth {
    set {
      DeviceCapsPINVOKE.Caps_max_texture_depth_set(swigCPtr, value);
    } 
    get {
      ushort ret = DeviceCapsPINVOKE.Caps_max_texture_depth_get(swigCPtr);
      return ret;
    } 
  }

  public Caps() : this(DeviceCapsPINVOKE.new_Caps(), true) {
  }

  public enum Type {
    D3D12
  }

}

}
