//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Engine.Net {

class IFormatPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="SWIGRegisterExceptionCallbacks_IFormat")]
    public static extern void SWIGRegisterExceptionCallbacks_IFormat(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_IFormat")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_IFormat(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_IFormat(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_IFormat(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(IFormatPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(IFormatPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="SWIGRegisterStringCallback_IFormat")]
    public static extern void SWIGRegisterStringCallback_IFormat(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_IFormat(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static IFormatPINVOKE() {
  }


  protected class SWIGWStringHelper {

    public delegate string SWIGWStringDelegate(global::System.IntPtr message);
    static SWIGWStringDelegate wstringDelegate = new SWIGWStringDelegate(CreateWString);

    [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="SWIGRegisterWStringCallback_IFormat")]
    public static extern void SWIGRegisterWStringCallback_IFormat(SWIGWStringDelegate wstringDelegate);

    static string CreateWString([global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]global::System.IntPtr cString) {
      return global::System.Runtime.InteropServices.Marshal.PtrToStringUni(cString);
    }

    static SWIGWStringHelper() {
      SWIGRegisterWStringCallback_IFormat(wstringDelegate);
    }
  }

  static protected SWIGWStringHelper swigWStringHelper = new SWIGWStringHelper();


  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_imaxdiv_t_quot_set___")]
  public static extern void imaxdiv_t_quot_set(global::System.Runtime.InteropServices.HandleRef jarg1, long jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_imaxdiv_t_quot_get___")]
  public static extern long imaxdiv_t_quot_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_imaxdiv_t_rem_set___")]
  public static extern void imaxdiv_t_rem_set(global::System.Runtime.InteropServices.HandleRef jarg1, long jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_imaxdiv_t_rem_get___")]
  public static extern long imaxdiv_t_rem_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_imaxdiv_t___")]
  public static extern global::System.IntPtr new_imaxdiv_t();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_delete_imaxdiv_t___")]
  public static extern void delete_imaxdiv_t(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_imaxabs___")]
  public static extern long imaxabs(long jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_imaxdiv___")]
  public static extern global::System.IntPtr imaxdiv(long jarg1, long jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_strtoimax___")]
  public static extern long strtoimax(string jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_strtoumax___")]
  public static extern ulong strtoumax(string jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_EC_R_get___")]
  public static extern uint EC_R_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_EC_G_get___")]
  public static extern uint EC_G_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_EC_B_get___")]
  public static extern uint EC_B_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_EC_A_get___")]
  public static extern uint EC_A_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_EC_D_get___")]
  public static extern uint EC_D_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_EC_S_get___")]
  public static extern uint EC_S_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_EC_BC_get___")]
  public static extern uint EC_BC_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_EC_E_get___")]
  public static extern uint EC_E_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_EC_ETC_get___")]
  public static extern uint EC_ETC_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ECT_UNorm_get___")]
  public static extern uint ECT_UNorm_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ECT_SNorm_get___")]
  public static extern uint ECT_SNorm_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ECT_UInt_get___")]
  public static extern uint ECT_UInt_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ECT_SInt_get___")]
  public static extern uint ECT_SInt_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ECT_Float_get___")]
  public static extern uint ECT_Float_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ECT_UNorm_SRGB_get___")]
  public static extern uint ECT_UNorm_SRGB_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ECT_Typeless_get___")]
  public static extern uint ECT_Typeless_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ECT_SharedExp_get___")]
  public static extern uint ECT_SharedExp_get();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ElementInitData_data_set___")]
  public static extern void ElementInitData_data_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ElementInitData_data_get___")]
  public static extern global::System.IntPtr ElementInitData_data_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ElementInitData_row_pitch_set___")]
  public static extern void ElementInitData_row_pitch_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ElementInitData_row_pitch_get___")]
  public static extern uint ElementInitData_row_pitch_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ElementInitData_slice_pitch_set___")]
  public static extern void ElementInitData_slice_pitch_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_ElementInitData_slice_pitch_get___")]
  public static extern uint ElementInitData_slice_pitch_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_ElementInitData___")]
  public static extern global::System.IntPtr new_ElementInitData();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_delete_ElementInitData___")]
  public static extern void delete_ElementInitData(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_SampleDesc_Count_set___")]
  public static extern void SampleDesc_Count_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_SampleDesc_Count_get___")]
  public static extern uint SampleDesc_Count_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_SampleDesc_Quality_set___")]
  public static extern void SampleDesc_Quality_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_SampleDesc_Quality_get___")]
  public static extern uint SampleDesc_Quality_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_SampleDesc__SWIG_0___")]
  public static extern global::System.IntPtr new_SampleDesc__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_new_SampleDesc__SWIG_1___")]
  public static extern global::System.IntPtr new_SampleDesc__SWIG_1(uint jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Engine.Wrap", EntryPoint="CSharp_EnginefNet_delete_SampleDesc___")]
  public static extern void delete_SampleDesc(global::System.Runtime.InteropServices.HandleRef jarg1);
}

}
